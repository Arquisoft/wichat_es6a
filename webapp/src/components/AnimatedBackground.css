/* AnimatedBackground.css */

/* Asegura que no haya márgenes o padding en el body */
body, html {
  margin: 0;
  padding: 0;
  height: 100%;
  overflow-x: hidden; /* Previene scroll horizontal si algo se sale */
}

/* Keyframes para la animación del fondo degradado */
@keyframes gradientAnimation {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* Fondo animado que cubre toda la pantalla */
.background-container {
  position: fixed; /* Fijo para que no haga scroll con el contenido */
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh; /* Ocupa toda la altura de la ventana */
  /* ** NUEVO FONDO DEGRADADO Y ANIMACIÓN ** */
  background: linear-gradient(135deg, #e0f2ff, #c2e5ff, #a8d8ff); /* Degradado azul claro */
  background-size: 200% 200%; /* Tamaño para la animación */
  animation: gradientAnimation 15s ease infinite; /* Aplicar animación */
  overflow: hidden; /* Esconder partículas que se salgan */
  z-index: -1; /* Detrás de todo el contenido */
}

/* Contenedor del contenido (opcional, si necesitas estilos específicos) */
/* Si usas MUI Container/Box con padding, quizás no necesites esto */
.content-wrapper {
  position: relative; /* Para que el contenido esté sobre el z-index del fondo */
  z-index: 1;
  min-height: 90vh; /* Asegura altura mínima */
  /* Quitar display flex si el centrado se hace con MUI Box/Container */
  /* display: flex; */
  /* flex-direction: column; */
  /* justify-content: center; */
  /* align-items: center; */
  background: transparent; /* El contenido no tiene fondo propio */
}

/* Contenedor de partículas */
.particles {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none; /* Las partículas no deben ser clickables */
}

/* Estrellas y trofeos como partículas individuales */
.particle {
  position: absolute;
  font-size: 20px; /* Tamaño base */
  opacity: 0.6; /* Opacidad base reducida */
  /* Animación base de flotación (se puede sobreescribir) */
  animation: float 15s infinite ease-in-out;
  user-select: none; /* Evitar selección accidental */
}

/* Variaciones para las estrellas */
.star {
  /* ** NUEVO COLOR: Azul brillante de la paleta ** */
  color: #00b4d8ff; /* pacificCyan */
  font-size: 15px;
}

/* Variaciones para los trofeos */
.trophy {
   /* ** NUEVO COLOR: Azul medio de la paleta ** */
  color: #0077b6ff; /* honoluluBlue */
  font-size: 25px;
}

/* Animaciones de flotación (keyframes sin cambios en la lógica de movimiento) */
@keyframes float {
  0% {
    transform: translate(0, 100vh) scale(1) rotate(0deg); /* Empezar desde abajo */
    opacity: 0; /* Empezar invisible */
  }
  20% {
      opacity: 0.7; /* Aparecer */
  }
  50% {
      /* Moverse a una posición aleatoria en el centro/diagonal */
      transform: translate(calc(50vw + (var(--random-x, 0) * 10vw)), calc(50vh + (var(--random-y, 0) * 10vh))) scale(1.2) rotate(180deg);
      opacity: 0.9;
  }
  80% {
      opacity: 0.7; /* Empezar a desaparecer */
  }
  100% {
      /* Terminar arriba y fuera por la derecha/izquierda */
      transform: translate(calc(100vw * var(--random-end-x, 1)), -10vh) scale(1) rotate(360deg);
      opacity: 0;
  }
}

@keyframes float-alt {
  0% {
    transform: translate(calc(100vw * var(--random-start-x, 1)), 100vh) scale(0.8) rotate(0deg);
    opacity: 0;
  }
   20% {
      opacity: 0.6;
  }
  50% {
    transform: translate(calc(50vw + (var(--random-x, 0) * -10vw)), calc(50vh + (var(--random-y, 0) * -10vh))) scale(1.3) rotate(-180deg);
    opacity: 0.8;
  }
   80% {
      opacity: 0.6;
  }
  100% {
    transform: translate(calc(0vw - (50vw * var(--random-end-x, 1))), -10vh) scale(0.8) rotate(-360deg);
    opacity: 0;
  }
}

/* Añadir variaciones en las partículas */
/* Aplicar animación alternativa a los impares */
.particle:nth-child(odd) {
  animation-name: float-alt;
  animation-duration: 20s; /* Duración diferente */
}

/* Variar duraciones para desincronizar */
.particle:nth-child(3n) {
  animation-duration: 25s;
}

.particle:nth-child(5n) {
  animation-duration: 18s;
}

.particle:nth-child(7n) {
  animation-duration: 22s;
}

/* Puedes añadir variables CSS en línea en los spans si necesitas aleatoriedad
   más controlada desde React para --random-x, --random-y, etc.
   Ejemplo en React: style={{ '--random-x': Math.random() * 2 - 1 }} */